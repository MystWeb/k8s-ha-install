apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: kube-users
    name: kube-users
  name: kube-users
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: devops-dev01
  namespace: kube-users
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: devops-test01
  namespace: kube-users
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: namespace-readonly
rules:
  - apiGroups: [ "" ]
    resources: [ "namespaces" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "metrics.k8s.io" ] # 获取CPU、内存等信息
    resources: [ "pods" ]
    verbs: [ "get", "list", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aggregate-to-view # 不包含 resources: ["secrets"]，否则集群中可以查看和监控所有 secrets 资源，包括 admin secrets。
rules:
  - apiGroups: [ "" ]
    resources: [ "configmaps", "endpoints", "persistentvolumeclaims", "persistentvolumeclaims/status", "pods", "replicationcontrollers", "replicationcontrollers/scale", "serviceaccounts", "services", "services/status" ]
    verbs: [ "get","list","watch" ]
  - apiGroups: [ "" ]
    resources: [ "bindings", "events", "limitranges", "namespaces/status", "pods/log", "pods/status", "replicationcontrollers/status", "resourcequotas", "resourcequotas/status" ]
    verbs: [ "get","list","watch" ]
  - apiGroups: [ "" ]
    resources: [ "namespaces" ]
    verbs: [ "get","list","watch" ]
  - apiGroups: [ "metrics.k8s.io" ] # 获取CPU、内存等信息
    resources: [ "pods" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "discovery.k8s.io" ]
    resources: [ "endpointslices" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "apps" ]
    resources: [ "controllerrevisions", "daemonsets", "daemonsets/status", "deployments", "deployments/scale", "deployments/status", "replicasets", "replicasets/scale", "replicasets/status", "statefulsets", "statefulsets/scale" , "statefulsets/status" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "autoscaling" ]
    resources: [ "horizontalpodautoscalers", "horizontalpodautoscalers/status" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "batch" ]
    resources: [ "cronjobs", "cronjobs/status", "jobs", "jobs/status" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "extensions" ]
    resources: [ "daemonsets", "daemonsets/status", "deployments", "deployments/scale", "deployments/status", "ingresses", "ingresses/status", "networkpolicies", "replicasets", "replicasets/scale", "replicasets/status", "replicationcontrollers/scale" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "policy" ]
    resources: [ "poddisruptionbudgets", "poddisruptionbudgets/status" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "networking.k8s.io" ]
    resources: [ "ingresses", "ingresses/status", "networkpolicies" ]
    verbs: [ "get", "list", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aggregate-to-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aggregate-to-view
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts:kube-users
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-admin
rules:
  - apiGroups: [ "" ]
    resources: [ "pod", "pods/log", "pods/status", "pods/exec" ]
    verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
#  - apiGroups: [ "" ]
#    resources: [ "pods/exec" ]
#    verbs: [ "create" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-edit
rules:
  - apiGroups: [ "" ]
    resources: [ "pod", "pods/log", "pods/status", "pods/exec" ]
    verbs: [ "get", "list", "watch", "update", "patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deployments-edit
rules:
  - apiGroups: [ "apps" ]
    resources: [ "deployments", "deployments/scale" ]
    verbs: [ "get", "update", "patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-view
rules:
  - apiGroups: [ "" ]
    resources: [ "pod", "pods/log", "pods/status" ]
    verbs: [ "get", "list", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: namespace-admin
rules:
  - apiGroups: [ "*" ]
    resources: [ "nodes", "namespaces", "pods", "services", "deployments", "configmaps", "pods/log", "pods/status", "pods/exec", "deployments/scale" ]
    verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devops-dev01-namespace-admin-binding
  namespace: devops-web-dev01
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespace-admin
subjects:
  - kind: ServiceAccount
    name: devops-dev01
    namespace: kube-users
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: devops-dev01-namespace-admin-binding
  namespace: devops-web-test01
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespace-admin
subjects:
  - kind: ServiceAccount
    name: devops-dev01
    namespace: kube-users